diff --git a/node_modules/eris/lib/voice/VoiceConnection.js b/node_modules/eris/lib/voice/VoiceConnection.js
index 577f1d4..e813eaf 100644
--- a/node_modules/eris/lib/voice/VoiceConnection.js
+++ b/node_modules/eris/lib/voice/VoiceConnection.js
@@ -353,7 +353,13 @@ class VoiceConnection extends EventEmitter {
             if(this.connecting || this.ready) {
                 let reconnecting = true;
                 if(code === 4006) {
-                    reconnecting = false;
+                    if(this.channelID) {
+                        data.endpoint = null;
+                        reconnecting = true;
+                        err = null;
+                    } else {
+                        reconnecting = false;
+                    }
                 } else if(code === 4014) {
                     if(this.channelID) {
                         data.endpoint = null;
@@ -641,7 +647,7 @@ class VoiceConnection extends EventEmitter {
     * @arg {Number} [frameSize] The size (in samples) of the Opus audio frame
     */
     sendAudioFrame(frame, frameSize = this.frameSize) {
-        this.timestamp = (this.timestamp + frameSize) & 0xFFFFFFFF;
+        this.timestamp = (this.timestamp + frameSize) >>> 0;
         this.sequence = (this.sequence + 1) & 0xFFFF;
 
         return this._sendAudioFrame(frame);
@@ -790,7 +796,7 @@ class VoiceConnection extends EventEmitter {
                 this.setSpeaking(0);
             }
             this.current.pausedTime += 4 * this.current.options.frameDuration;
-            this.timestamp = (this.timestamp + 3 * this.current.options.frameSize) & 0xFFFFFFFF;
+            this.timestamp = (this.timestamp + 3 * this.current.options.frameSize) >>> 0;
             this.current.timeout = setTimeout(this._send, 4 * this.current.options.frameDuration);
             return;
         } else {
