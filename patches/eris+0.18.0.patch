diff --git a/node_modules/eris/lib/voice/VoiceConnection.js b/node_modules/eris/lib/voice/VoiceConnection.js
index 858a4b6..dd4a970 100644
--- a/node_modules/eris/lib/voice/VoiceConnection.js
+++ b/node_modules/eris/lib/voice/VoiceConnection.js
@@ -378,7 +378,12 @@ class VoiceConnection extends EventEmitter {
           return;
         }
         if (code === 4006) {
-          reconnecting = false;
+          if (this.channelID) {
+            reconnecting = true;
+            err = null;
+          } else {
+            reconnecting = false;
+          }
         } else if (code === 4014) {
           if (this.channelID) {
             data.endpoint = null;
diff --git a/node_modules/eris/lib/voice/streams/BaseTransformer.js b/node_modules/eris/lib/voice/streams/BaseTransformer.js
index 8195952..a621762 100644
--- a/node_modules/eris/lib/voice/streams/BaseTransformer.js
+++ b/node_modules/eris/lib/voice/streams/BaseTransformer.js
@@ -10,7 +10,7 @@ class BaseTransformer extends TransformStream {
       options.allowHalfOpen = true;
     }
     if (options.highWaterMark === undefined) {
-      options.highWaterMark = 0;
+      options.highWaterMark = 1;
     }
     super(options);
     this.manualCB = false;
diff --git a/node_modules/eris/lib/voice/streams/OggOpusTransformer.js b/node_modules/eris/lib/voice/streams/OggOpusTransformer.js
index 8c2aeb7..c3b857d 100644
--- a/node_modules/eris/lib/voice/streams/OggOpusTransformer.js
+++ b/node_modules/eris/lib/voice/streams/OggOpusTransformer.js
@@ -8,6 +8,7 @@ class OggOpusTransformer extends BaseTransformer {
 
     this._remainder = null;
     this._bitstream = null;
+    this._incompleteSegment = null;
   }
 
   process(buffer) {
@@ -20,10 +21,6 @@ class OggOpusTransformer extends BaseTransformer {
     }
 
     const typeFlag = buffer.readUInt8(buffer._index + 5);
-    if (typeFlag === 1) {
-      return new Error("OGG continued page not supported");
-    }
-
     const bitstream = buffer.readUInt32BE(buffer._index + 14);
 
     buffer._index += 26;
@@ -62,6 +59,10 @@ class OggOpusTransformer extends BaseTransformer {
         if (byte === "OpusTags") {
           this.emit("debug", segment.toString());
         } else if (bitstream === this._bitstream) {
+          if (typeFlag === 1 && this._incompleteSegment) {
+            segment = Buffer.concat([this._incompleteSegment, segment]);
+            this._incompleteSegment = null;
+          }
           this.push(segment);
         }
       } else if (byte === "OpusHead") {
@@ -71,6 +72,12 @@ class OggOpusTransformer extends BaseTransformer {
         this.emit("debug", "Invalid codec: " + byte);
       }
     }
+
+    // Save incomplete segment
+    if (size !== 0) {
+      buffer._index += size;
+      this._incompleteSegment = buffer.subarray(buffer._index - size, buffer._index);
+    }
   }
 
   _final(cb) {
